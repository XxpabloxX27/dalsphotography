import { __decorate } from "tslib";
import { NgModule } from '@angular/core';
import { IgxGroupAreaDropDirective, IgxGroupByRowTemplateDirective, IgxRowExpandedIndicatorDirective, IgxRowCollapsedIndicatorDirective, IgxHeaderExpandIndicatorDirective, IgxHeaderCollapseIndicatorDirective, IgxGridDetailTemplateDirective } from './grid.directives';
import { IgxGridComponent } from './grid.component';
import { IgxGridPagingPipe, IgxGridGroupingPipe, IgxGridSortingPipe, IgxGridFilteringPipe } from './grid.pipes';
import { IgxGridGroupByRowComponent } from './groupby-row.component';
import { IgxGridRowComponent } from './grid-row.component';
import { IgxGridCommonModule } from '../grid-common.module';
import { IgxGridSummaryPipe } from './grid.summary.pipe';
import { IgxGridDetailsPipe } from './grid.details.pipe';
import { IgxGridExpandableCellComponent } from './expandable-cell.component';
/**
 * @hidden
 */
var IgxGridModule = /** @class */ (function () {
    function IgxGridModule() {
    }
    IgxGridModule = __decorate([
        NgModule({
            declarations: [
                IgxGridComponent,
                IgxGridRowComponent,
                IgxGridGroupByRowComponent,
                IgxGroupByRowTemplateDirective,
                IgxGridDetailTemplateDirective,
                IgxRowExpandedIndicatorDirective,
                IgxRowCollapsedIndicatorDirective,
                IgxHeaderExpandIndicatorDirective,
                IgxHeaderCollapseIndicatorDirective,
                IgxGroupAreaDropDirective,
                IgxGridGroupingPipe,
                IgxGridPagingPipe,
                IgxGridSortingPipe,
                IgxGridFilteringPipe,
                IgxGridSummaryPipe,
                IgxGridDetailsPipe,
                IgxGridExpandableCellComponent
            ],
            exports: [
                IgxGridComponent,
                IgxGridExpandableCellComponent,
                IgxGridGroupByRowComponent,
                IgxGridRowComponent,
                IgxGroupByRowTemplateDirective,
                IgxGridDetailTemplateDirective,
                IgxRowExpandedIndicatorDirective,
                IgxRowCollapsedIndicatorDirective,
                IgxHeaderExpandIndicatorDirective,
                IgxHeaderCollapseIndicatorDirective,
                IgxGroupAreaDropDirective,
                IgxGridGroupingPipe,
                IgxGridPagingPipe,
                IgxGridSortingPipe,
                IgxGridFilteringPipe,
                IgxGridSummaryPipe,
                IgxGridDetailsPipe,
                IgxGridCommonModule
            ],
            imports: [
                IgxGridCommonModule,
            ]
        })
    ], IgxGridModule);
    return IgxGridModule;
}());
export { IgxGridModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JpZC5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9pZ25pdGV1aS1hbmd1bGFyLyIsInNvdXJjZXMiOlsibGliL2dyaWRzL2dyaWQvZ3JpZC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUNILHlCQUF5QixFQUN6Qiw4QkFBOEIsRUFDOUIsZ0NBQWdDLEVBQ2hDLGlDQUFpQyxFQUNqQyxpQ0FBaUMsRUFDakMsbUNBQW1DLEVBQ25DLDhCQUE4QixFQUNqQyxNQUFNLG1CQUFtQixDQUFDO0FBQzNCLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ3BELE9BQU8sRUFDSCxpQkFBaUIsRUFDakIsbUJBQW1CLEVBQ25CLGtCQUFrQixFQUNsQixvQkFBb0IsRUFDdkIsTUFBTSxjQUFjLENBQUM7QUFDdEIsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDckUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDM0QsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDNUQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDekQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDekQsT0FBTyxFQUFFLDhCQUE4QixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFFN0U7O0dBRUc7QUE2Q0g7SUFBQTtJQUE0QixDQUFDO0lBQWhCLGFBQWE7UUE1Q3pCLFFBQVEsQ0FBQztZQUNSLFlBQVksRUFBRTtnQkFDWixnQkFBZ0I7Z0JBQ2hCLG1CQUFtQjtnQkFDbkIsMEJBQTBCO2dCQUMxQiw4QkFBOEI7Z0JBQzlCLDhCQUE4QjtnQkFDOUIsZ0NBQWdDO2dCQUNoQyxpQ0FBaUM7Z0JBQ2pDLGlDQUFpQztnQkFDakMsbUNBQW1DO2dCQUNuQyx5QkFBeUI7Z0JBQ3pCLG1CQUFtQjtnQkFDbkIsaUJBQWlCO2dCQUNqQixrQkFBa0I7Z0JBQ2xCLG9CQUFvQjtnQkFDcEIsa0JBQWtCO2dCQUNsQixrQkFBa0I7Z0JBQ2xCLDhCQUE4QjthQUMvQjtZQUNELE9BQU8sRUFBRTtnQkFDUCxnQkFBZ0I7Z0JBQ2hCLDhCQUE4QjtnQkFDOUIsMEJBQTBCO2dCQUMxQixtQkFBbUI7Z0JBQ25CLDhCQUE4QjtnQkFDOUIsOEJBQThCO2dCQUM5QixnQ0FBZ0M7Z0JBQ2hDLGlDQUFpQztnQkFDakMsaUNBQWlDO2dCQUNqQyxtQ0FBbUM7Z0JBQ25DLHlCQUF5QjtnQkFDekIsbUJBQW1CO2dCQUNuQixpQkFBaUI7Z0JBQ2pCLGtCQUFrQjtnQkFDbEIsb0JBQW9CO2dCQUNwQixrQkFBa0I7Z0JBQ2xCLGtCQUFrQjtnQkFDbEIsbUJBQW1CO2FBQ3BCO1lBQ0QsT0FBTyxFQUFFO2dCQUNQLG1CQUFtQjthQUNwQjtTQUNGLENBQUM7T0FDVyxhQUFhLENBQUc7SUFBRCxvQkFBQztDQUFBLEFBQTdCLElBQTZCO1NBQWhCLGFBQWEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgICBJZ3hHcm91cEFyZWFEcm9wRGlyZWN0aXZlLFxuICAgIElneEdyb3VwQnlSb3dUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICBJZ3hSb3dFeHBhbmRlZEluZGljYXRvckRpcmVjdGl2ZSxcbiAgICBJZ3hSb3dDb2xsYXBzZWRJbmRpY2F0b3JEaXJlY3RpdmUsXG4gICAgSWd4SGVhZGVyRXhwYW5kSW5kaWNhdG9yRGlyZWN0aXZlLFxuICAgIElneEhlYWRlckNvbGxhcHNlSW5kaWNhdG9yRGlyZWN0aXZlLFxuICAgIElneEdyaWREZXRhaWxUZW1wbGF0ZURpcmVjdGl2ZVxufSBmcm9tICcuL2dyaWQuZGlyZWN0aXZlcyc7XG5pbXBvcnQgeyBJZ3hHcmlkQ29tcG9uZW50IH0gZnJvbSAnLi9ncmlkLmNvbXBvbmVudCc7XG5pbXBvcnQge1xuICAgIElneEdyaWRQYWdpbmdQaXBlLFxuICAgIElneEdyaWRHcm91cGluZ1BpcGUsXG4gICAgSWd4R3JpZFNvcnRpbmdQaXBlLFxuICAgIElneEdyaWRGaWx0ZXJpbmdQaXBlXG59IGZyb20gJy4vZ3JpZC5waXBlcyc7XG5pbXBvcnQgeyBJZ3hHcmlkR3JvdXBCeVJvd0NvbXBvbmVudCB9IGZyb20gJy4vZ3JvdXBieS1yb3cuY29tcG9uZW50JztcbmltcG9ydCB7IElneEdyaWRSb3dDb21wb25lbnQgfSBmcm9tICcuL2dyaWQtcm93LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJZ3hHcmlkQ29tbW9uTW9kdWxlIH0gZnJvbSAnLi4vZ3JpZC1jb21tb24ubW9kdWxlJztcbmltcG9ydCB7IElneEdyaWRTdW1tYXJ5UGlwZSB9IGZyb20gJy4vZ3JpZC5zdW1tYXJ5LnBpcGUnO1xuaW1wb3J0IHsgSWd4R3JpZERldGFpbHNQaXBlIH0gZnJvbSAnLi9ncmlkLmRldGFpbHMucGlwZSc7XG5pbXBvcnQgeyBJZ3hHcmlkRXhwYW5kYWJsZUNlbGxDb21wb25lbnQgfSBmcm9tICcuL2V4cGFuZGFibGUtY2VsbC5jb21wb25lbnQnO1xuXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgSWd4R3JpZENvbXBvbmVudCxcbiAgICBJZ3hHcmlkUm93Q29tcG9uZW50LFxuICAgIElneEdyaWRHcm91cEJ5Um93Q29tcG9uZW50LFxuICAgIElneEdyb3VwQnlSb3dUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICBJZ3hHcmlkRGV0YWlsVGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgSWd4Um93RXhwYW5kZWRJbmRpY2F0b3JEaXJlY3RpdmUsXG4gICAgSWd4Um93Q29sbGFwc2VkSW5kaWNhdG9yRGlyZWN0aXZlLFxuICAgIElneEhlYWRlckV4cGFuZEluZGljYXRvckRpcmVjdGl2ZSxcbiAgICBJZ3hIZWFkZXJDb2xsYXBzZUluZGljYXRvckRpcmVjdGl2ZSxcbiAgICBJZ3hHcm91cEFyZWFEcm9wRGlyZWN0aXZlLFxuICAgIElneEdyaWRHcm91cGluZ1BpcGUsXG4gICAgSWd4R3JpZFBhZ2luZ1BpcGUsXG4gICAgSWd4R3JpZFNvcnRpbmdQaXBlLFxuICAgIElneEdyaWRGaWx0ZXJpbmdQaXBlLFxuICAgIElneEdyaWRTdW1tYXJ5UGlwZSxcbiAgICBJZ3hHcmlkRGV0YWlsc1BpcGUsXG4gICAgSWd4R3JpZEV4cGFuZGFibGVDZWxsQ29tcG9uZW50XG4gIF0sXG4gIGV4cG9ydHM6IFtcbiAgICBJZ3hHcmlkQ29tcG9uZW50LFxuICAgIElneEdyaWRFeHBhbmRhYmxlQ2VsbENvbXBvbmVudCxcbiAgICBJZ3hHcmlkR3JvdXBCeVJvd0NvbXBvbmVudCxcbiAgICBJZ3hHcmlkUm93Q29tcG9uZW50LFxuICAgIElneEdyb3VwQnlSb3dUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICBJZ3hHcmlkRGV0YWlsVGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgSWd4Um93RXhwYW5kZWRJbmRpY2F0b3JEaXJlY3RpdmUsXG4gICAgSWd4Um93Q29sbGFwc2VkSW5kaWNhdG9yRGlyZWN0aXZlLFxuICAgIElneEhlYWRlckV4cGFuZEluZGljYXRvckRpcmVjdGl2ZSxcbiAgICBJZ3hIZWFkZXJDb2xsYXBzZUluZGljYXRvckRpcmVjdGl2ZSxcbiAgICBJZ3hHcm91cEFyZWFEcm9wRGlyZWN0aXZlLFxuICAgIElneEdyaWRHcm91cGluZ1BpcGUsXG4gICAgSWd4R3JpZFBhZ2luZ1BpcGUsXG4gICAgSWd4R3JpZFNvcnRpbmdQaXBlLFxuICAgIElneEdyaWRGaWx0ZXJpbmdQaXBlLFxuICAgIElneEdyaWRTdW1tYXJ5UGlwZSxcbiAgICBJZ3hHcmlkRGV0YWlsc1BpcGUsXG4gICAgSWd4R3JpZENvbW1vbk1vZHVsZVxuICBdLFxuICBpbXBvcnRzOiBbXG4gICAgSWd4R3JpZENvbW1vbk1vZHVsZSxcbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBJZ3hHcmlkTW9kdWxlIHt9XG4iXX0=