import { __decorate } from "tslib";
import { Component, Input, Output, EventEmitter, HostBinding, ElementRef, HostListener } from '@angular/core';
import { isDateInRanges } from '../calendar';
import { CalendarSelection } from '../calendar-base';
/**
 *@hidden
*/
var IgxDayItemComponent = /** @class */ (function () {
    function IgxDayItemComponent(elementRef) {
        this.elementRef = elementRef;
        this.hideOutsideDays = false;
        this.isLastInRange = false;
        this.isFirstInRange = false;
        this.isWithinRange = false;
        this.onDateSelection = new EventEmitter();
        this._selected = false;
    }
    Object.defineProperty(IgxDayItemComponent.prototype, "selected", {
        /**
         * Returns boolean indicating if the day is selected
         *
         */
        get: function () {
            return this._selected;
        },
        /**
         * Selects the day
         */
        set: function (value) {
            this._selected = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDayItemComponent.prototype, "isCurrentMonth", {
        get: function () {
            return this.date.isCurrentMonth;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDayItemComponent.prototype, "isPreviousMonth", {
        get: function () {
            return this.date.isPrevMonth;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDayItemComponent.prototype, "isNextMonth", {
        get: function () {
            return this.date.isNextMonth;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDayItemComponent.prototype, "nativeElement", {
        get: function () {
            return this.elementRef.nativeElement;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDayItemComponent.prototype, "isSelectedCSS", {
        get: function () {
            return (!this.isDisabled && this.selected);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDayItemComponent.prototype, "isInactive", {
        get: function () {
            return this.date.isNextMonth || this.date.isPrevMonth;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDayItemComponent.prototype, "isHidden", {
        get: function () {
            return this.hideOutsideDays && this.isInactive;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDayItemComponent.prototype, "isToday", {
        get: function () {
            var today = new Date(Date.now());
            var date = this.date.date;
            return (date.getFullYear() === today.getFullYear() &&
                date.getMonth() === today.getMonth() &&
                date.getDate() === today.getDate());
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDayItemComponent.prototype, "isWeekend", {
        get: function () {
            var day = this.date.date.getDay();
            return day === 0 || day === 6;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDayItemComponent.prototype, "isDisabled", {
        get: function () {
            if (this.disabledDates === null) {
                return false;
            }
            return isDateInRanges(this.date.date, this.disabledDates);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDayItemComponent.prototype, "isOutOfRange", {
        get: function () {
            if (!this.outOfRangeDates) {
                return false;
            }
            return isDateInRanges(this.date.date, this.outOfRangeDates);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDayItemComponent.prototype, "isFocusable", {
        get: function () {
            return this.isCurrentMonth && !this.isHidden && !this.isDisabled && !this.isOutOfRange;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDayItemComponent.prototype, "isWithinRangeCSS", {
        get: function () {
            return !this.isSingleSelection && this.isWithinRange;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDayItemComponent.prototype, "isSpecial", {
        get: function () {
            if (this.specialDates === null) {
                return false;
            }
            return isDateInRanges(this.date.date, this.specialDates);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDayItemComponent.prototype, "defaultCSS", {
        get: function () {
            return this.date.isCurrentMonth && !(this.isWeekend && this.selected);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDayItemComponent.prototype, "isDisabledCSS", {
        get: function () {
            return this.isHidden || this.isDisabled || this.isOutOfRange;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDayItemComponent.prototype, "isSingleSelection", {
        get: function () {
            return this.selection !== CalendarSelection.RANGE;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDayItemComponent.prototype, "tabindex", {
        get: function () {
            return this.isDisabled || this.isHidden ? -1 : 0;
        },
        enumerable: true,
        configurable: true
    });
    IgxDayItemComponent.prototype.onSelect = function () {
        this.onDateSelection.emit(this.date);
    };
    IgxDayItemComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input()
    ], IgxDayItemComponent.prototype, "date", void 0);
    __decorate([
        Input()
    ], IgxDayItemComponent.prototype, "selection", void 0);
    __decorate([
        Input()
    ], IgxDayItemComponent.prototype, "selected", null);
    __decorate([
        Input()
    ], IgxDayItemComponent.prototype, "disabledDates", void 0);
    __decorate([
        Input()
    ], IgxDayItemComponent.prototype, "outOfRangeDates", void 0);
    __decorate([
        Input()
    ], IgxDayItemComponent.prototype, "specialDates", void 0);
    __decorate([
        Input()
    ], IgxDayItemComponent.prototype, "hideOutsideDays", void 0);
    __decorate([
        Input(),
        HostBinding('class.igx-calendar__date--last')
    ], IgxDayItemComponent.prototype, "isLastInRange", void 0);
    __decorate([
        Input(),
        HostBinding('class.igx-calendar__date--first')
    ], IgxDayItemComponent.prototype, "isFirstInRange", void 0);
    __decorate([
        Input()
    ], IgxDayItemComponent.prototype, "isWithinRange", void 0);
    __decorate([
        Output()
    ], IgxDayItemComponent.prototype, "onDateSelection", void 0);
    __decorate([
        HostBinding('class.igx-calendar__date--selected')
    ], IgxDayItemComponent.prototype, "isSelectedCSS", null);
    __decorate([
        HostBinding('class.igx-calendar__date--inactive')
    ], IgxDayItemComponent.prototype, "isInactive", null);
    __decorate([
        HostBinding('class.igx-calendar__date--hidden')
    ], IgxDayItemComponent.prototype, "isHidden", null);
    __decorate([
        HostBinding('class.igx-calendar__date--current')
    ], IgxDayItemComponent.prototype, "isToday", null);
    __decorate([
        HostBinding('class.igx-calendar__date--weekend')
    ], IgxDayItemComponent.prototype, "isWeekend", null);
    __decorate([
        HostBinding('class.igx-calendar__date--range')
    ], IgxDayItemComponent.prototype, "isWithinRangeCSS", null);
    __decorate([
        HostBinding('class.igx-calendar__date--special')
    ], IgxDayItemComponent.prototype, "isSpecial", null);
    __decorate([
        HostBinding('class.igx-calendar__date')
    ], IgxDayItemComponent.prototype, "defaultCSS", null);
    __decorate([
        HostBinding('class.igx-calendar__date--disabled')
    ], IgxDayItemComponent.prototype, "isDisabledCSS", null);
    __decorate([
        HostBinding('class.igx-calendar__date--single')
    ], IgxDayItemComponent.prototype, "isSingleSelection", null);
    __decorate([
        HostBinding('attr.tabindex')
    ], IgxDayItemComponent.prototype, "tabindex", null);
    __decorate([
        HostListener('click'),
        HostListener('keydown.enter')
    ], IgxDayItemComponent.prototype, "onSelect", null);
    IgxDayItemComponent = __decorate([
        Component({
            selector: 'igx-day-item',
            template: "<span class=\"igx-calendar__date-content\">\n    <ng-content></ng-content>\n</span>\n"
        })
    ], IgxDayItemComponent);
    return IgxDayItemComponent;
}());
export { IgxDayItemComponent };
//# sourceMappingURL=data:application/json;base64,