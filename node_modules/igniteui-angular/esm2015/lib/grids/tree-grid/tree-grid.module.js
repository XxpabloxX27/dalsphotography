import { __decorate } from "tslib";
import { NgModule } from '@angular/core';
import { IgxTreeGridComponent } from './tree-grid.component';
import { IgxTreeGridRowComponent } from './tree-grid-row.component';
import { IgxGridCommonModule } from '../grid-common.module';
import { IgxTreeGridHierarchizingPipe } from './tree-grid.pipes';
import { IgxTreeGridFlatteningPipe, IgxTreeGridSortingPipe, IgxTreeGridPagingPipe, IgxTreeGridTransactionPipe } from './tree-grid.pipes';
import { IgxTreeGridCellComponent } from './tree-cell.component';
import { IgxTreeGridFilteringPipe } from './tree-grid.filtering.pipe';
import { IgxTreeGridSummaryPipe } from './tree-grid.summary.pipe';
import { IgxRowLoadingIndicatorTemplateDirective } from './tree-grid.directives';
/**
 * @hidden
 */
let IgxTreeGridModule = class IgxTreeGridModule {
};
IgxTreeGridModule = __decorate([
    NgModule({
        declarations: [
            IgxTreeGridComponent,
            IgxTreeGridRowComponent,
            IgxTreeGridCellComponent,
            IgxTreeGridHierarchizingPipe,
            IgxTreeGridFlatteningPipe,
            IgxTreeGridSortingPipe,
            IgxTreeGridFilteringPipe,
            IgxTreeGridPagingPipe,
            IgxTreeGridTransactionPipe,
            IgxTreeGridSummaryPipe,
            IgxRowLoadingIndicatorTemplateDirective
        ],
        exports: [
            IgxTreeGridComponent,
            IgxTreeGridRowComponent,
            IgxTreeGridCellComponent,
            IgxRowLoadingIndicatorTemplateDirective,
            IgxGridCommonModule
        ],
        imports: [
            IgxGridCommonModule,
        ]
    })
], IgxTreeGridModule);
export { IgxTreeGridModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZS1ncmlkLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2lnbml0ZXVpLWFuZ3VsYXIvIiwic291cmNlcyI6WyJsaWIvZ3JpZHMvdHJlZS1ncmlkL3RyZWUtZ3JpZC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDN0QsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDcEUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDNUQsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDakUsT0FBTyxFQUFFLHlCQUF5QixFQUFFLHNCQUFzQixFQUFFLHFCQUFxQixFQUFFLDBCQUEwQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDekksT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDakUsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDdEUsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDbEUsT0FBTyxFQUFFLHVDQUF1QyxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFFakY7O0dBRUc7QUEwQkgsSUFBYSxpQkFBaUIsR0FBOUIsTUFBYSxpQkFBaUI7Q0FDN0IsQ0FBQTtBQURZLGlCQUFpQjtJQXpCN0IsUUFBUSxDQUFDO1FBQ1IsWUFBWSxFQUFFO1lBQ1osb0JBQW9CO1lBQ3BCLHVCQUF1QjtZQUN2Qix3QkFBd0I7WUFDeEIsNEJBQTRCO1lBQzVCLHlCQUF5QjtZQUN6QixzQkFBc0I7WUFDdEIsd0JBQXdCO1lBQ3hCLHFCQUFxQjtZQUNyQiwwQkFBMEI7WUFDMUIsc0JBQXNCO1lBQ3RCLHVDQUF1QztTQUN4QztRQUNELE9BQU8sRUFBRTtZQUNQLG9CQUFvQjtZQUNwQix1QkFBdUI7WUFDdkIsd0JBQXdCO1lBQ3hCLHVDQUF1QztZQUN2QyxtQkFBbUI7U0FDcEI7UUFDRCxPQUFPLEVBQUU7WUFDUCxtQkFBbUI7U0FDcEI7S0FDRixDQUFDO0dBQ1csaUJBQWlCLENBQzdCO1NBRFksaUJBQWlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElneFRyZWVHcmlkQ29tcG9uZW50IH0gZnJvbSAnLi90cmVlLWdyaWQuY29tcG9uZW50JztcbmltcG9ydCB7IElneFRyZWVHcmlkUm93Q29tcG9uZW50IH0gZnJvbSAnLi90cmVlLWdyaWQtcm93LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJZ3hHcmlkQ29tbW9uTW9kdWxlIH0gZnJvbSAnLi4vZ3JpZC1jb21tb24ubW9kdWxlJztcbmltcG9ydCB7IElneFRyZWVHcmlkSGllcmFyY2hpemluZ1BpcGUgfSBmcm9tICcuL3RyZWUtZ3JpZC5waXBlcyc7XG5pbXBvcnQgeyBJZ3hUcmVlR3JpZEZsYXR0ZW5pbmdQaXBlLCBJZ3hUcmVlR3JpZFNvcnRpbmdQaXBlLCBJZ3hUcmVlR3JpZFBhZ2luZ1BpcGUsIElneFRyZWVHcmlkVHJhbnNhY3Rpb25QaXBlIH0gZnJvbSAnLi90cmVlLWdyaWQucGlwZXMnO1xuaW1wb3J0IHsgSWd4VHJlZUdyaWRDZWxsQ29tcG9uZW50IH0gZnJvbSAnLi90cmVlLWNlbGwuY29tcG9uZW50JztcbmltcG9ydCB7IElneFRyZWVHcmlkRmlsdGVyaW5nUGlwZSB9IGZyb20gJy4vdHJlZS1ncmlkLmZpbHRlcmluZy5waXBlJztcbmltcG9ydCB7IElneFRyZWVHcmlkU3VtbWFyeVBpcGUgfSBmcm9tICcuL3RyZWUtZ3JpZC5zdW1tYXJ5LnBpcGUnO1xuaW1wb3J0IHsgSWd4Um93TG9hZGluZ0luZGljYXRvclRlbXBsYXRlRGlyZWN0aXZlIH0gZnJvbSAnLi90cmVlLWdyaWQuZGlyZWN0aXZlcyc7XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBJZ3hUcmVlR3JpZENvbXBvbmVudCxcbiAgICBJZ3hUcmVlR3JpZFJvd0NvbXBvbmVudCxcbiAgICBJZ3hUcmVlR3JpZENlbGxDb21wb25lbnQsXG4gICAgSWd4VHJlZUdyaWRIaWVyYXJjaGl6aW5nUGlwZSxcbiAgICBJZ3hUcmVlR3JpZEZsYXR0ZW5pbmdQaXBlLFxuICAgIElneFRyZWVHcmlkU29ydGluZ1BpcGUsXG4gICAgSWd4VHJlZUdyaWRGaWx0ZXJpbmdQaXBlLFxuICAgIElneFRyZWVHcmlkUGFnaW5nUGlwZSxcbiAgICBJZ3hUcmVlR3JpZFRyYW5zYWN0aW9uUGlwZSxcbiAgICBJZ3hUcmVlR3JpZFN1bW1hcnlQaXBlLFxuICAgIElneFJvd0xvYWRpbmdJbmRpY2F0b3JUZW1wbGF0ZURpcmVjdGl2ZVxuICBdLFxuICBleHBvcnRzOiBbXG4gICAgSWd4VHJlZUdyaWRDb21wb25lbnQsXG4gICAgSWd4VHJlZUdyaWRSb3dDb21wb25lbnQsXG4gICAgSWd4VHJlZUdyaWRDZWxsQ29tcG9uZW50LFxuICAgIElneFJvd0xvYWRpbmdJbmRpY2F0b3JUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICBJZ3hHcmlkQ29tbW9uTW9kdWxlXG4gIF0sXG4gIGltcG9ydHM6IFtcbiAgICBJZ3hHcmlkQ29tbW9uTW9kdWxlLFxuICBdXG59KVxuZXhwb3J0IGNsYXNzIElneFRyZWVHcmlkTW9kdWxlIHtcbn1cbiJdfQ==