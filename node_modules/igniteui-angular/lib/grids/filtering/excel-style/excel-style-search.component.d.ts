import { AfterViewInit, ChangeDetectorRef, TemplateRef } from '@angular/core';
import { IgxColumnComponent } from '../../columns/column.component';
import { IChangeCheckboxEventArgs } from '../../../checkbox/checkbox.component';
import { IgxInputDirective } from '../../../directives/input/input.directive';
import { DisplayDensity } from '../../../core/density';
import { IgxForOfDirective } from '../../../directives/for-of/for_of.directive';
import { FilterListItem } from './grid.excel-style-filtering.component';
import { IgxListComponent } from '../../../list';
import * as ɵngcc0 from '@angular/core';
export declare class IgxExcelStyleLoadingValuesTemplateDirective {
    template: TemplateRef<any>;
    constructor(template: TemplateRef<any>);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxExcelStyleLoadingValuesTemplateDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<IgxExcelStyleLoadingValuesTemplateDirective, "[igxExcelStyleLoading]", never, {}, {}, never>;
}
/**
 * @hidden
 */
export declare class IgxExcelStyleSearchComponent implements AfterViewInit {
    cdr: ChangeDetectorRef;
    private _isLoading;
    get isLoading(): boolean;
    set isLoading(value: boolean);
    searchValue: any;
    grid: any;
    data: FilterListItem[];
    inline: boolean;
    column: IgxColumnComponent;
    searchInput: IgxInputDirective;
    list: IgxListComponent;
    displayDensity: DisplayDensity;
    protected virtDir: IgxForOfDirective<any>;
    protected defaultExcelStyleLoadingValuesTemplate: TemplateRef<any>;
    get valuesLoadingTemplate(): any;
    constructor(cdr: ChangeDetectorRef);
    ngAfterViewInit(): void;
    refreshSize(): void;
    clearInput(): void;
    onCheckboxChange(eventArgs: IChangeCheckboxEventArgs): void;
    get itemSize(): string;
    get containerSize(): any;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxExcelStyleSearchComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<IgxExcelStyleSearchComponent, "igx-excel-style-search", never, {
    "grid": "grid";
    "data": "data";
    "inline": "inline";
    "column": "column";
    "displayDensity": "displayDensity";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhjZWwtc3R5bGUtc2VhcmNoLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJleGNlbC1zdHlsZS1zZWFyY2guY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztBQVFBOzs7OztBQUdBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTJCQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyVmlld0luaXQsIENoYW5nZURldGVjdG9yUmVmLCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSWd4Q29sdW1uQ29tcG9uZW50IH0gZnJvbSAnLi4vLi4vY29sdW1ucy9jb2x1bW4uY29tcG9uZW50JztcbmltcG9ydCB7IElDaGFuZ2VDaGVja2JveEV2ZW50QXJncyB9IGZyb20gJy4uLy4uLy4uL2NoZWNrYm94L2NoZWNrYm94LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJZ3hJbnB1dERpcmVjdGl2ZSB9IGZyb20gJy4uLy4uLy4uL2RpcmVjdGl2ZXMvaW5wdXQvaW5wdXQuZGlyZWN0aXZlJztcbmltcG9ydCB7IERpc3BsYXlEZW5zaXR5IH0gZnJvbSAnLi4vLi4vLi4vY29yZS9kZW5zaXR5JztcbmltcG9ydCB7IElneEZvck9mRGlyZWN0aXZlIH0gZnJvbSAnLi4vLi4vLi4vZGlyZWN0aXZlcy9mb3Itb2YvZm9yX29mLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBGaWx0ZXJMaXN0SXRlbSB9IGZyb20gJy4vZ3JpZC5leGNlbC1zdHlsZS1maWx0ZXJpbmcuY29tcG9uZW50JztcbmltcG9ydCB7IElneExpc3RDb21wb25lbnQgfSBmcm9tICcuLi8uLi8uLi9saXN0JztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIElneEV4Y2VsU3R5bGVMb2FkaW5nVmFsdWVzVGVtcGxhdGVEaXJlY3RpdmUge1xuICAgIHRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIGNvbnN0cnVjdG9yKHRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+KTtcbn1cbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBJZ3hFeGNlbFN0eWxlU2VhcmNoQ29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCB7XG4gICAgY2RyOiBDaGFuZ2VEZXRlY3RvclJlZjtcbiAgICBwcml2YXRlIF9pc0xvYWRpbmc7XG4gICAgZ2V0IGlzTG9hZGluZygpOiBib29sZWFuO1xuICAgIHNldCBpc0xvYWRpbmcodmFsdWU6IGJvb2xlYW4pO1xuICAgIHNlYXJjaFZhbHVlOiBhbnk7XG4gICAgZ3JpZDogYW55O1xuICAgIGRhdGE6IEZpbHRlckxpc3RJdGVtW107XG4gICAgaW5saW5lOiBib29sZWFuO1xuICAgIGNvbHVtbjogSWd4Q29sdW1uQ29tcG9uZW50O1xuICAgIHNlYXJjaElucHV0OiBJZ3hJbnB1dERpcmVjdGl2ZTtcbiAgICBsaXN0OiBJZ3hMaXN0Q29tcG9uZW50O1xuICAgIGRpc3BsYXlEZW5zaXR5OiBEaXNwbGF5RGVuc2l0eTtcbiAgICBwcm90ZWN0ZWQgdmlydERpcjogSWd4Rm9yT2ZEaXJlY3RpdmU8YW55PjtcbiAgICBwcm90ZWN0ZWQgZGVmYXVsdEV4Y2VsU3R5bGVMb2FkaW5nVmFsdWVzVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgZ2V0IHZhbHVlc0xvYWRpbmdUZW1wbGF0ZSgpOiBhbnk7XG4gICAgY29uc3RydWN0b3IoY2RyOiBDaGFuZ2VEZXRlY3RvclJlZik7XG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQ7XG4gICAgcmVmcmVzaFNpemUoKTogdm9pZDtcbiAgICBjbGVhcklucHV0KCk6IHZvaWQ7XG4gICAgb25DaGVja2JveENoYW5nZShldmVudEFyZ3M6IElDaGFuZ2VDaGVja2JveEV2ZW50QXJncyk6IHZvaWQ7XG4gICAgZ2V0IGl0ZW1TaXplKCk6IHN0cmluZztcbiAgICBnZXQgY29udGFpbmVyU2l6ZSgpOiBhbnk7XG59XG4iXX0=