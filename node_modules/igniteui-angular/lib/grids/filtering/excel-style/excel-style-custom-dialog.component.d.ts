import { ChangeDetectorRef, AfterViewInit, TemplateRef, ElementRef } from '@angular/core';
import { IgxColumnComponent } from '../../columns/column.component';
import { IgxFilteringService, ExpressionUI } from '../grid-filtering.service';
import { IgxToggleDirective } from '../../../directives/toggle/toggle.directive';
import { IgxOverlayService } from '../../../services/index';
import { ILogicOperatorChangedArgs } from './excel-style-default-expression.component';
import { DisplayDensity } from '../../../core/density';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class IgxExcelStyleCustomDialogComponent implements AfterViewInit {
    private cdr;
    expressionsList: ExpressionUI[];
    private _customDialogPositionSettings;
    private _customDialogOverlaySettings;
    column: IgxColumnComponent;
    selectedOperator: string;
    filteringService: IgxFilteringService;
    overlayComponentId: string;
    overlayService: IgxOverlayService;
    displayDensity: DisplayDensity;
    private expressionComponents;
    private expressionDateComponents;
    toggle: IgxToggleDirective;
    protected defaultExpressionTemplate: TemplateRef<any>;
    protected dateExpressionTemplate: TemplateRef<any>;
    protected expressionsContainer: ElementRef;
    constructor(cdr: ChangeDetectorRef);
    ngAfterViewInit(): void;
    get template(): TemplateRef<any>;
    get grid(): any;
    onCustomDialogOpening(): void;
    onCustomDialogOpened(): void;
    open(esf: any): void;
    onClearButtonClick(): void;
    closeDialog(): void;
    onApplyButtonClick(): void;
    onAddButtonClick(): void;
    onExpressionRemoved(event: ExpressionUI): void;
    onLogicOperatorChanged(event: ILogicOperatorChangedArgs): void;
    onKeyDown(eventArgs: any): void;
    onApplyButtonKeyDown(eventArgs: any): void;
    private createCondition;
    private markChildrenForCheck;
    private createInitialExpressionUIElement;
    private scrollToBottom;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxExcelStyleCustomDialogComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<IgxExcelStyleCustomDialogComponent, "igx-excel-style-custom-dialog", never, {
    "expressionsList": "expressionsList";
    "column": "column";
    "selectedOperator": "selectedOperator";
    "filteringService": "filteringService";
    "overlayComponentId": "overlayComponentId";
    "overlayService": "overlayService";
    "displayDensity": "displayDensity";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhjZWwtc3R5bGUtY3VzdG9tLWRpYWxvZy5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiZXhjZWwtc3R5bGUtY3VzdG9tLWRpYWxvZy5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7QUFVQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW9DQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdG9yUmVmLCBBZnRlclZpZXdJbml0LCBUZW1wbGF0ZVJlZiwgRWxlbWVudFJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSWd4Q29sdW1uQ29tcG9uZW50IH0gZnJvbSAnLi4vLi4vY29sdW1ucy9jb2x1bW4uY29tcG9uZW50JztcbmltcG9ydCB7IElneEZpbHRlcmluZ1NlcnZpY2UsIEV4cHJlc3Npb25VSSB9IGZyb20gJy4uL2dyaWQtZmlsdGVyaW5nLnNlcnZpY2UnO1xuaW1wb3J0IHsgSWd4VG9nZ2xlRGlyZWN0aXZlIH0gZnJvbSAnLi4vLi4vLi4vZGlyZWN0aXZlcy90b2dnbGUvdG9nZ2xlLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBJZ3hPdmVybGF5U2VydmljZSB9IGZyb20gJy4uLy4uLy4uL3NlcnZpY2VzL2luZGV4JztcbmltcG9ydCB7IElMb2dpY09wZXJhdG9yQ2hhbmdlZEFyZ3MgfSBmcm9tICcuL2V4Y2VsLXN0eWxlLWRlZmF1bHQtZXhwcmVzc2lvbi5jb21wb25lbnQnO1xuaW1wb3J0IHsgRGlzcGxheURlbnNpdHkgfSBmcm9tICcuLi8uLi8uLi9jb3JlL2RlbnNpdHknO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIElneEV4Y2VsU3R5bGVDdXN0b21EaWFsb2dDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0IHtcbiAgICBwcml2YXRlIGNkcjtcbiAgICBleHByZXNzaW9uc0xpc3Q6IEV4cHJlc3Npb25VSVtdO1xuICAgIHByaXZhdGUgX2N1c3RvbURpYWxvZ1Bvc2l0aW9uU2V0dGluZ3M7XG4gICAgcHJpdmF0ZSBfY3VzdG9tRGlhbG9nT3ZlcmxheVNldHRpbmdzO1xuICAgIGNvbHVtbjogSWd4Q29sdW1uQ29tcG9uZW50O1xuICAgIHNlbGVjdGVkT3BlcmF0b3I6IHN0cmluZztcbiAgICBmaWx0ZXJpbmdTZXJ2aWNlOiBJZ3hGaWx0ZXJpbmdTZXJ2aWNlO1xuICAgIG92ZXJsYXlDb21wb25lbnRJZDogc3RyaW5nO1xuICAgIG92ZXJsYXlTZXJ2aWNlOiBJZ3hPdmVybGF5U2VydmljZTtcbiAgICBkaXNwbGF5RGVuc2l0eTogRGlzcGxheURlbnNpdHk7XG4gICAgcHJpdmF0ZSBleHByZXNzaW9uQ29tcG9uZW50cztcbiAgICBwcml2YXRlIGV4cHJlc3Npb25EYXRlQ29tcG9uZW50cztcbiAgICB0b2dnbGU6IElneFRvZ2dsZURpcmVjdGl2ZTtcbiAgICBwcm90ZWN0ZWQgZGVmYXVsdEV4cHJlc3Npb25UZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcbiAgICBwcm90ZWN0ZWQgZGF0ZUV4cHJlc3Npb25UZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcbiAgICBwcm90ZWN0ZWQgZXhwcmVzc2lvbnNDb250YWluZXI6IEVsZW1lbnRSZWY7XG4gICAgY29uc3RydWN0b3IoY2RyOiBDaGFuZ2VEZXRlY3RvclJlZik7XG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQ7XG4gICAgZ2V0IHRlbXBsYXRlKCk6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgZ2V0IGdyaWQoKTogYW55O1xuICAgIG9uQ3VzdG9tRGlhbG9nT3BlbmluZygpOiB2b2lkO1xuICAgIG9uQ3VzdG9tRGlhbG9nT3BlbmVkKCk6IHZvaWQ7XG4gICAgb3Blbihlc2Y6IGFueSk6IHZvaWQ7XG4gICAgb25DbGVhckJ1dHRvbkNsaWNrKCk6IHZvaWQ7XG4gICAgY2xvc2VEaWFsb2coKTogdm9pZDtcbiAgICBvbkFwcGx5QnV0dG9uQ2xpY2soKTogdm9pZDtcbiAgICBvbkFkZEJ1dHRvbkNsaWNrKCk6IHZvaWQ7XG4gICAgb25FeHByZXNzaW9uUmVtb3ZlZChldmVudDogRXhwcmVzc2lvblVJKTogdm9pZDtcbiAgICBvbkxvZ2ljT3BlcmF0b3JDaGFuZ2VkKGV2ZW50OiBJTG9naWNPcGVyYXRvckNoYW5nZWRBcmdzKTogdm9pZDtcbiAgICBvbktleURvd24oZXZlbnRBcmdzOiBhbnkpOiB2b2lkO1xuICAgIG9uQXBwbHlCdXR0b25LZXlEb3duKGV2ZW50QXJnczogYW55KTogdm9pZDtcbiAgICBwcml2YXRlIGNyZWF0ZUNvbmRpdGlvbjtcbiAgICBwcml2YXRlIG1hcmtDaGlsZHJlbkZvckNoZWNrO1xuICAgIHByaXZhdGUgY3JlYXRlSW5pdGlhbEV4cHJlc3Npb25VSUVsZW1lbnQ7XG4gICAgcHJpdmF0ZSBzY3JvbGxUb0JvdHRvbTtcbn1cbiJdfQ==