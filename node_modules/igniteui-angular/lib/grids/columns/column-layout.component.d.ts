import { AfterContentInit } from '@angular/core';
import { IgxColumnGroupComponent } from './column-group.component';
import * as ɵngcc0 from '@angular/core';
export declare class IgxColumnLayoutComponent extends IgxColumnGroupComponent implements AfterContentInit {
    childrenVisibleIndexes: any[];
    /**
     * Gets the width of the column layout.
     * ```typescript
     * let columnGroupWidth = this.columnGroup.width;
     * ```
     * @memberof IgxColumnGroupComponent
     */
    get width(): any;
    set width(val: any);
    get columnLayout(): boolean;
    /**
     * @hidden
     */
    getCalcWidth(): any;
    /**
     * Gets the column visible index.
     * If the column is not visible, returns `-1`.
     * ```typescript
     * let visibleColumnIndex =  this.column.visibleIndex;
     * ```
     * @memberof IgxColumnComponent
     */
    get visibleIndex(): number;
    get hidden(): boolean;
    /**
     * Sets the column layout hidden property.
     * ```typescript
     * <igx-column-layout [hidden] = "true"></igx-column->
     * ```
     * @memberof IgxColumnGroupComponent
     */
    set hidden(value: boolean);
    /**
     *@hidden
    */
    ngAfterContentInit(): void;
    get hasLastPinnedChildColumn(): boolean;
    /**
     *@hidden
    */
    populateVisibleIndexes(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxColumnLayoutComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<IgxColumnLayoutComponent, "igx-column-layout", never, {
    "hidden": "hidden";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sdW1uLWxheW91dC5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiY29sdW1uLWxheW91dC5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBMkNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJDb250ZW50SW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSWd4Q29sdW1uR3JvdXBDb21wb25lbnQgfSBmcm9tICcuL2NvbHVtbi1ncm91cC5jb21wb25lbnQnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgSWd4Q29sdW1uTGF5b3V0Q29tcG9uZW50IGV4dGVuZHMgSWd4Q29sdW1uR3JvdXBDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0IHtcbiAgICBjaGlsZHJlblZpc2libGVJbmRleGVzOiBhbnlbXTtcbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSB3aWR0aCBvZiB0aGUgY29sdW1uIGxheW91dC5cbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogbGV0IGNvbHVtbkdyb3VwV2lkdGggPSB0aGlzLmNvbHVtbkdyb3VwLndpZHRoO1xuICAgICAqIGBgYFxuICAgICAqIEBtZW1iZXJvZiBJZ3hDb2x1bW5Hcm91cENvbXBvbmVudFxuICAgICAqL1xuICAgIGdldCB3aWR0aCgpOiBhbnk7XG4gICAgc2V0IHdpZHRoKHZhbDogYW55KTtcbiAgICBnZXQgY29sdW1uTGF5b3V0KCk6IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGdldENhbGNXaWR0aCgpOiBhbnk7XG4gICAgLyoqXG4gICAgICogR2V0cyB0aGUgY29sdW1uIHZpc2libGUgaW5kZXguXG4gICAgICogSWYgdGhlIGNvbHVtbiBpcyBub3QgdmlzaWJsZSwgcmV0dXJucyBgLTFgLlxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBsZXQgdmlzaWJsZUNvbHVtbkluZGV4ID0gIHRoaXMuY29sdW1uLnZpc2libGVJbmRleDtcbiAgICAgKiBgYGBcbiAgICAgKiBAbWVtYmVyb2YgSWd4Q29sdW1uQ29tcG9uZW50XG4gICAgICovXG4gICAgZ2V0IHZpc2libGVJbmRleCgpOiBudW1iZXI7XG4gICAgZ2V0IGhpZGRlbigpOiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIFNldHMgdGhlIGNvbHVtbiBsYXlvdXQgaGlkZGVuIHByb3BlcnR5LlxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiA8aWd4LWNvbHVtbi1sYXlvdXQgW2hpZGRlbl0gPSBcInRydWVcIj48L2lneC1jb2x1bW4tPlxuICAgICAqIGBgYFxuICAgICAqIEBtZW1iZXJvZiBJZ3hDb2x1bW5Hcm91cENvbXBvbmVudFxuICAgICAqL1xuICAgIHNldCBoaWRkZW4odmFsdWU6IGJvb2xlYW4pO1xuICAgIC8qKlxuICAgICAqQGhpZGRlblxuICAgICovXG4gICAgbmdBZnRlckNvbnRlbnRJbml0KCk6IHZvaWQ7XG4gICAgZ2V0IGhhc0xhc3RQaW5uZWRDaGlsZENvbHVtbigpOiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqQGhpZGRlblxuICAgICovXG4gICAgcG9wdWxhdGVWaXNpYmxlSW5kZXhlcygpOiB2b2lkO1xufVxuIl19