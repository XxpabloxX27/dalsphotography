import { ChangeDetectorRef, DoCheck, ElementRef, NgZone, OnInit, OnDestroy, NgModuleRef } from '@angular/core';
import { SortingDirection } from '../../data-operations/sorting-expression.interface';
import { GridBaseAPIService } from '../api.service';
import { IgxColumnComponent } from '../columns/column.component';
import { IgxFilteringService } from '../filtering/grid-filtering.service';
import { IgxGridBaseDirective } from '../grid-base.directive';
import { IgxColumnResizingService } from '../resizing/resizing.service';
import { IgxOverlayService } from '../../services/overlay/overlay';
import { GridType } from '../common/grid.interface';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class IgxGridHeaderComponent implements DoCheck, OnInit, OnDestroy {
    gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>;
    colResizingService: IgxColumnResizingService;
    cdr: ChangeDetectorRef;
    elementRef: ElementRef;
    zone: NgZone;
    private _filteringService;
    private _moduleRef;
    private _overlayService;
    private _componentOverlayId;
    private _filterMenuPositionSettings;
    private _filterMenuOverlaySettings;
    private _destroy$;
    column: IgxColumnComponent;
    gridID: string;
    get styleClasses(): string;
    get height(): number;
    get ascending(): boolean;
    get descending(): boolean;
    get sortingIcon(): string;
    get sorted(): boolean;
    get filterIconClassName(): "igx-excel-filter__icon--filtered" | "igx-excel-filter__icon";
    hostRole: string;
    tabindex: number;
    get headerID(): string;
    protected sortDirection: SortingDirection;
    constructor(gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>, colResizingService: IgxColumnResizingService, cdr: ChangeDetectorRef, elementRef: ElementRef, zone: NgZone, _filteringService: IgxFilteringService, _moduleRef: NgModuleRef<any>, _overlayService: IgxOverlayService);
    ngOnInit(): void;
    ngDoCheck(): void;
    ngOnDestroy(): void;
    onClick(event: any): void;
    onFilteringIconClick(event: any): void;
    get grid(): any;
    protected getSortDirection(): void;
    onSortingIconClick(event: any): void;
    private triggerSort;
    private toggleFilterDropdown;
    private initFilteringSettings;
    private onOverlayOpening;
    private onOverlayClosed;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxGridHeaderComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<IgxGridHeaderComponent, "igx-grid-header", never, {
    "column": "column";
    "gridID": "gridID";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JpZC1oZWFkZXIuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImdyaWQtaGVhZGVyLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7O0FBWUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXdDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdG9yUmVmLCBEb0NoZWNrLCBFbGVtZW50UmVmLCBOZ1pvbmUsIE9uSW5pdCwgT25EZXN0cm95LCBOZ01vZHVsZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU29ydGluZ0RpcmVjdGlvbiB9IGZyb20gJy4uLy4uL2RhdGEtb3BlcmF0aW9ucy9zb3J0aW5nLWV4cHJlc3Npb24uaW50ZXJmYWNlJztcbmltcG9ydCB7IEdyaWRCYXNlQVBJU2VydmljZSB9IGZyb20gJy4uL2FwaS5zZXJ2aWNlJztcbmltcG9ydCB7IElneENvbHVtbkNvbXBvbmVudCB9IGZyb20gJy4uL2NvbHVtbnMvY29sdW1uLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJZ3hGaWx0ZXJpbmdTZXJ2aWNlIH0gZnJvbSAnLi4vZmlsdGVyaW5nL2dyaWQtZmlsdGVyaW5nLnNlcnZpY2UnO1xuaW1wb3J0IHsgSWd4R3JpZEJhc2VEaXJlY3RpdmUgfSBmcm9tICcuLi9ncmlkLWJhc2UuZGlyZWN0aXZlJztcbmltcG9ydCB7IElneENvbHVtblJlc2l6aW5nU2VydmljZSB9IGZyb20gJy4uL3Jlc2l6aW5nL3Jlc2l6aW5nLnNlcnZpY2UnO1xuaW1wb3J0IHsgSWd4T3ZlcmxheVNlcnZpY2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9vdmVybGF5L292ZXJsYXknO1xuaW1wb3J0IHsgR3JpZFR5cGUgfSBmcm9tICcuLi9jb21tb24vZ3JpZC5pbnRlcmZhY2UnO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIElneEdyaWRIZWFkZXJDb21wb25lbnQgaW1wbGVtZW50cyBEb0NoZWNrLCBPbkluaXQsIE9uRGVzdHJveSB7XG4gICAgZ3JpZEFQSTogR3JpZEJhc2VBUElTZXJ2aWNlPElneEdyaWRCYXNlRGlyZWN0aXZlICYgR3JpZFR5cGU+O1xuICAgIGNvbFJlc2l6aW5nU2VydmljZTogSWd4Q29sdW1uUmVzaXppbmdTZXJ2aWNlO1xuICAgIGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWY7XG4gICAgZWxlbWVudFJlZjogRWxlbWVudFJlZjtcbiAgICB6b25lOiBOZ1pvbmU7XG4gICAgcHJpdmF0ZSBfZmlsdGVyaW5nU2VydmljZTtcbiAgICBwcml2YXRlIF9tb2R1bGVSZWY7XG4gICAgcHJpdmF0ZSBfb3ZlcmxheVNlcnZpY2U7XG4gICAgcHJpdmF0ZSBfY29tcG9uZW50T3ZlcmxheUlkO1xuICAgIHByaXZhdGUgX2ZpbHRlck1lbnVQb3NpdGlvblNldHRpbmdzO1xuICAgIHByaXZhdGUgX2ZpbHRlck1lbnVPdmVybGF5U2V0dGluZ3M7XG4gICAgcHJpdmF0ZSBfZGVzdHJveSQ7XG4gICAgY29sdW1uOiBJZ3hDb2x1bW5Db21wb25lbnQ7XG4gICAgZ3JpZElEOiBzdHJpbmc7XG4gICAgZ2V0IHN0eWxlQ2xhc3NlcygpOiBzdHJpbmc7XG4gICAgZ2V0IGhlaWdodCgpOiBudW1iZXI7XG4gICAgZ2V0IGFzY2VuZGluZygpOiBib29sZWFuO1xuICAgIGdldCBkZXNjZW5kaW5nKCk6IGJvb2xlYW47XG4gICAgZ2V0IHNvcnRpbmdJY29uKCk6IHN0cmluZztcbiAgICBnZXQgc29ydGVkKCk6IGJvb2xlYW47XG4gICAgZ2V0IGZpbHRlckljb25DbGFzc05hbWUoKTogXCJpZ3gtZXhjZWwtZmlsdGVyX19pY29uLS1maWx0ZXJlZFwiIHwgXCJpZ3gtZXhjZWwtZmlsdGVyX19pY29uXCI7XG4gICAgaG9zdFJvbGU6IHN0cmluZztcbiAgICB0YWJpbmRleDogbnVtYmVyO1xuICAgIGdldCBoZWFkZXJJRCgpOiBzdHJpbmc7XG4gICAgcHJvdGVjdGVkIHNvcnREaXJlY3Rpb246IFNvcnRpbmdEaXJlY3Rpb247XG4gICAgY29uc3RydWN0b3IoZ3JpZEFQSTogR3JpZEJhc2VBUElTZXJ2aWNlPElneEdyaWRCYXNlRGlyZWN0aXZlICYgR3JpZFR5cGU+LCBjb2xSZXNpemluZ1NlcnZpY2U6IElneENvbHVtblJlc2l6aW5nU2VydmljZSwgY2RyOiBDaGFuZ2VEZXRlY3RvclJlZiwgZWxlbWVudFJlZjogRWxlbWVudFJlZiwgem9uZTogTmdab25lLCBfZmlsdGVyaW5nU2VydmljZTogSWd4RmlsdGVyaW5nU2VydmljZSwgX21vZHVsZVJlZjogTmdNb2R1bGVSZWY8YW55PiwgX292ZXJsYXlTZXJ2aWNlOiBJZ3hPdmVybGF5U2VydmljZSk7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ0RvQ2hlY2soKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIG9uQ2xpY2soZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgb25GaWx0ZXJpbmdJY29uQ2xpY2soZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgZ2V0IGdyaWQoKTogYW55O1xuICAgIHByb3RlY3RlZCBnZXRTb3J0RGlyZWN0aW9uKCk6IHZvaWQ7XG4gICAgb25Tb3J0aW5nSWNvbkNsaWNrKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIHByaXZhdGUgdHJpZ2dlclNvcnQ7XG4gICAgcHJpdmF0ZSB0b2dnbGVGaWx0ZXJEcm9wZG93bjtcbiAgICBwcml2YXRlIGluaXRGaWx0ZXJpbmdTZXR0aW5ncztcbiAgICBwcml2YXRlIG9uT3ZlcmxheU9wZW5pbmc7XG4gICAgcHJpdmF0ZSBvbk92ZXJsYXlDbG9zZWQ7XG59XG4iXX0=