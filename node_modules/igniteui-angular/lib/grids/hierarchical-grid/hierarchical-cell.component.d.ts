import { IgxGridCellComponent } from '../cell.component';
import { GridBaseAPIService } from '../api.service';
import { ChangeDetectorRef, ElementRef, OnInit, NgZone } from '@angular/core';
import { IgxHierarchicalGridComponent } from './hierarchical-grid.component';
import { IgxGridSelectionService, IgxGridCRUDService } from '../selection/selection.service';
import { HammerGesturesManager } from '../../core/touch';
import { PlatformUtil } from '../../core/utils';
import * as ɵngcc0 from '@angular/core';
export declare class IgxHierarchicalGridCellComponent extends IgxGridCellComponent implements OnInit {
    protected selectionService: IgxGridSelectionService;
    protected crudService: IgxGridCRUDService;
    gridAPI: GridBaseAPIService<IgxHierarchicalGridComponent>;
    cdr: ChangeDetectorRef;
    private helement;
    protected zone: NgZone;
    protected platformUtil: PlatformUtil;
    protected _rootGrid: any;
    constructor(selectionService: IgxGridSelectionService, crudService: IgxGridCRUDService, gridAPI: GridBaseAPIService<IgxHierarchicalGridComponent>, cdr: ChangeDetectorRef, helement: ElementRef, zone: NgZone, touchManager: HammerGesturesManager, platformUtil: PlatformUtil);
    ngOnInit(): void;
    private _getRootGrid;
    _clearAllHighlights(): void;
    /**
     * @hidden
     * @internal
     */
    onFocus(event: any): void;
    /**
     * @hidden
     * @internal
     */
    dispatchEvent(event: KeyboardEvent): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxHierarchicalGridCellComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<IgxHierarchicalGridCellComponent, "igx-hierarchical-grid-cell", never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGllcmFyY2hpY2FsLWNlbGwuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImhpZXJhcmNoaWNhbC1jZWxsLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztBQU9BOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBdUJBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSWd4R3JpZENlbGxDb21wb25lbnQgfSBmcm9tICcuLi9jZWxsLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBHcmlkQmFzZUFQSVNlcnZpY2UgfSBmcm9tICcuLi9hcGkuc2VydmljZSc7XG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3RvclJlZiwgRWxlbWVudFJlZiwgT25Jbml0LCBOZ1pvbmUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElneEhpZXJhcmNoaWNhbEdyaWRDb21wb25lbnQgfSBmcm9tICcuL2hpZXJhcmNoaWNhbC1ncmlkLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJZ3hHcmlkU2VsZWN0aW9uU2VydmljZSwgSWd4R3JpZENSVURTZXJ2aWNlIH0gZnJvbSAnLi4vc2VsZWN0aW9uL3NlbGVjdGlvbi5zZXJ2aWNlJztcbmltcG9ydCB7IEhhbW1lckdlc3R1cmVzTWFuYWdlciB9IGZyb20gJy4uLy4uL2NvcmUvdG91Y2gnO1xuaW1wb3J0IHsgUGxhdGZvcm1VdGlsIH0gZnJvbSAnLi4vLi4vY29yZS91dGlscyc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBJZ3hIaWVyYXJjaGljYWxHcmlkQ2VsbENvbXBvbmVudCBleHRlbmRzIElneEdyaWRDZWxsQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgICBwcm90ZWN0ZWQgc2VsZWN0aW9uU2VydmljZTogSWd4R3JpZFNlbGVjdGlvblNlcnZpY2U7XG4gICAgcHJvdGVjdGVkIGNydWRTZXJ2aWNlOiBJZ3hHcmlkQ1JVRFNlcnZpY2U7XG4gICAgZ3JpZEFQSTogR3JpZEJhc2VBUElTZXJ2aWNlPElneEhpZXJhcmNoaWNhbEdyaWRDb21wb25lbnQ+O1xuICAgIGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWY7XG4gICAgcHJpdmF0ZSBoZWxlbWVudDtcbiAgICBwcm90ZWN0ZWQgem9uZTogTmdab25lO1xuICAgIHByb3RlY3RlZCBwbGF0Zm9ybVV0aWw6IFBsYXRmb3JtVXRpbDtcbiAgICBwcm90ZWN0ZWQgX3Jvb3RHcmlkOiBhbnk7XG4gICAgY29uc3RydWN0b3Ioc2VsZWN0aW9uU2VydmljZTogSWd4R3JpZFNlbGVjdGlvblNlcnZpY2UsIGNydWRTZXJ2aWNlOiBJZ3hHcmlkQ1JVRFNlcnZpY2UsIGdyaWRBUEk6IEdyaWRCYXNlQVBJU2VydmljZTxJZ3hIaWVyYXJjaGljYWxHcmlkQ29tcG9uZW50PiwgY2RyOiBDaGFuZ2VEZXRlY3RvclJlZiwgaGVsZW1lbnQ6IEVsZW1lbnRSZWYsIHpvbmU6IE5nWm9uZSwgdG91Y2hNYW5hZ2VyOiBIYW1tZXJHZXN0dXJlc01hbmFnZXIsIHBsYXRmb3JtVXRpbDogUGxhdGZvcm1VdGlsKTtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIHByaXZhdGUgX2dldFJvb3RHcmlkO1xuICAgIF9jbGVhckFsbEhpZ2hsaWdodHMoKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgb25Gb2N1cyhldmVudDogYW55KTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgZGlzcGF0Y2hFdmVudChldmVudDogS2V5Ym9hcmRFdmVudCk6IHZvaWQ7XG59XG4iXX0=