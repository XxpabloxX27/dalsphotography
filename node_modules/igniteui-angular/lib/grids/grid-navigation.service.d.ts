import { IgxColumnComponent } from './columns/column.component';
import { ISelectionNode } from './selection/selection.service';
import { GridType } from './common/grid.interface';
/** @hidden */
import * as ɵngcc0 from '@angular/core';
export declare class IgxGridNavigationService {
    grid: GridType;
    get displayContainerWidth(): number;
    get displayContainerScrollLeft(): number;
    get verticalDisplayContainerElement(): any;
    horizontalScroll(rowIndex: any): any;
    getColumnUnpinnedIndex(visibleColumnIndex: number): any;
    isColumnFullyVisible(columnIndex: number): boolean;
    isColumnRightEdgeVisible(columnIndex: number): boolean;
    isColumnLeftEdgeVisible(columnIndex: number): boolean;
    private forOfDir;
    private isColumnPinned;
    get gridOrderedColumns(): IgxColumnComponent[];
    isRowInEditMode(rowIndex: any): boolean;
    findNextEditable(direction: string, visibleColumnIndex: number): number;
    getCellElementByVisibleIndex(rowIndex: any, visibleColumnIndex: any, isSummary?: boolean): HTMLElement;
    onKeydownArrowRight(element: any, selectedNode: ISelectionNode): void;
    onKeydownArrowLeft(element: any, selectedNode: ISelectionNode): void;
    movePreviousEditable(rowIndex: number, currentColumnVisibleIndex: number): void;
    moveNextEditable(rowIndex: number, currentColumnVisibleIndex: number): void;
    focusEditableTarget(rowIndex: number, columnIndex: number): void;
    onKeydownHome(rowIndex: any, isSummary?: boolean): void;
    onKeydownEnd(rowIndex: any, isSummary?: boolean): void;
    navigateTop(visibleColumnIndex: any): void;
    private findFirstDataRowIndex;
    private findLastDataRowIndex;
    navigateBottom(visibleColumnIndex: any): void;
    navigateUp(rowElement: any, selectedNode: ISelectionNode): void;
    protected focusPreviousElement(currentRowEl: any, visibleColumnIndex: any): void;
    navigateDown(rowElement: any, selectedNode: ISelectionNode): void;
    protected focusElem(rowElement: any, visibleColumnIndex: any): any;
    protected focusNextElement(rowElement: any, visibleColumnIndex: any): any;
    goToFirstCell(): void;
    goToLastCell(): void;
    goToLastBodyElement(): void;
    performTab(currentRowEl: any, selectedNode: ISelectionNode): void;
    moveFocusToFilterCell(toStart?: boolean): void;
    navigatePrevFilterCell(column: IgxColumnComponent, eventArgs: any): void;
    navigateFirstCellIfPossible(eventArgs: any): void;
    navigateNextFilterCell(column: IgxColumnComponent, eventArgs: any): void;
    private getLastPinnedFilterableColumn;
    private getFirstPinnedFilterableColumn;
    performShiftTabKey(currentRowEl: any, selectedNode: ISelectionNode): void;
    shouldPerformVerticalScroll(targetRowIndex: number, visibleColumnIndex: number): boolean;
    performVerticalScrollToCell(rowIndex: number, visibleColIndex: number, cb?: () => void): void;
    performHorizontalScrollToCell(rowIndex: number, visibleColumnIndex: number, isSummary?: boolean, cb?: () => void): void;
    protected getFocusableGrid(): GridType;
    protected getRowByIndex(index: any, selector?: string): unknown;
    protected getNextRowByIndex(nextIndex: any): unknown;
    private getAllRows;
    protected getCellSelector(visibleIndex?: number, isSummary?: boolean): string;
    protected getRowSelector(): string;
    protected getClosestElemByTag(sourceElem: any, targetTag: any): any;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxGridNavigationService>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<IgxGridNavigationService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JpZC1uYXZpZ2F0aW9uLnNlcnZpY2UuZC50cyIsInNvdXJjZXMiOlsiZ3JpZC1uYXZpZ2F0aW9uLnNlcnZpY2UuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7QUFJQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXFEQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElneENvbHVtbkNvbXBvbmVudCB9IGZyb20gJy4vY29sdW1ucy9jb2x1bW4uY29tcG9uZW50JztcbmltcG9ydCB7IElTZWxlY3Rpb25Ob2RlIH0gZnJvbSAnLi9zZWxlY3Rpb24vc2VsZWN0aW9uLnNlcnZpY2UnO1xuaW1wb3J0IHsgR3JpZFR5cGUgfSBmcm9tICcuL2NvbW1vbi9ncmlkLmludGVyZmFjZSc7XG4vKiogQGhpZGRlbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgSWd4R3JpZE5hdmlnYXRpb25TZXJ2aWNlIHtcbiAgICBncmlkOiBHcmlkVHlwZTtcbiAgICBnZXQgZGlzcGxheUNvbnRhaW5lcldpZHRoKCk6IG51bWJlcjtcbiAgICBnZXQgZGlzcGxheUNvbnRhaW5lclNjcm9sbExlZnQoKTogbnVtYmVyO1xuICAgIGdldCB2ZXJ0aWNhbERpc3BsYXlDb250YWluZXJFbGVtZW50KCk6IGFueTtcbiAgICBob3Jpem9udGFsU2Nyb2xsKHJvd0luZGV4OiBhbnkpOiBhbnk7XG4gICAgZ2V0Q29sdW1uVW5waW5uZWRJbmRleCh2aXNpYmxlQ29sdW1uSW5kZXg6IG51bWJlcik6IGFueTtcbiAgICBpc0NvbHVtbkZ1bGx5VmlzaWJsZShjb2x1bW5JbmRleDogbnVtYmVyKTogYm9vbGVhbjtcbiAgICBpc0NvbHVtblJpZ2h0RWRnZVZpc2libGUoY29sdW1uSW5kZXg6IG51bWJlcik6IGJvb2xlYW47XG4gICAgaXNDb2x1bW5MZWZ0RWRnZVZpc2libGUoY29sdW1uSW5kZXg6IG51bWJlcik6IGJvb2xlYW47XG4gICAgcHJpdmF0ZSBmb3JPZkRpcjtcbiAgICBwcml2YXRlIGlzQ29sdW1uUGlubmVkO1xuICAgIGdldCBncmlkT3JkZXJlZENvbHVtbnMoKTogSWd4Q29sdW1uQ29tcG9uZW50W107XG4gICAgaXNSb3dJbkVkaXRNb2RlKHJvd0luZGV4OiBhbnkpOiBib29sZWFuO1xuICAgIGZpbmROZXh0RWRpdGFibGUoZGlyZWN0aW9uOiBzdHJpbmcsIHZpc2libGVDb2x1bW5JbmRleDogbnVtYmVyKTogbnVtYmVyO1xuICAgIGdldENlbGxFbGVtZW50QnlWaXNpYmxlSW5kZXgocm93SW5kZXg6IGFueSwgdmlzaWJsZUNvbHVtbkluZGV4OiBhbnksIGlzU3VtbWFyeT86IGJvb2xlYW4pOiBIVE1MRWxlbWVudDtcbiAgICBvbktleWRvd25BcnJvd1JpZ2h0KGVsZW1lbnQ6IGFueSwgc2VsZWN0ZWROb2RlOiBJU2VsZWN0aW9uTm9kZSk6IHZvaWQ7XG4gICAgb25LZXlkb3duQXJyb3dMZWZ0KGVsZW1lbnQ6IGFueSwgc2VsZWN0ZWROb2RlOiBJU2VsZWN0aW9uTm9kZSk6IHZvaWQ7XG4gICAgbW92ZVByZXZpb3VzRWRpdGFibGUocm93SW5kZXg6IG51bWJlciwgY3VycmVudENvbHVtblZpc2libGVJbmRleDogbnVtYmVyKTogdm9pZDtcbiAgICBtb3ZlTmV4dEVkaXRhYmxlKHJvd0luZGV4OiBudW1iZXIsIGN1cnJlbnRDb2x1bW5WaXNpYmxlSW5kZXg6IG51bWJlcik6IHZvaWQ7XG4gICAgZm9jdXNFZGl0YWJsZVRhcmdldChyb3dJbmRleDogbnVtYmVyLCBjb2x1bW5JbmRleDogbnVtYmVyKTogdm9pZDtcbiAgICBvbktleWRvd25Ib21lKHJvd0luZGV4OiBhbnksIGlzU3VtbWFyeT86IGJvb2xlYW4pOiB2b2lkO1xuICAgIG9uS2V5ZG93bkVuZChyb3dJbmRleDogYW55LCBpc1N1bW1hcnk/OiBib29sZWFuKTogdm9pZDtcbiAgICBuYXZpZ2F0ZVRvcCh2aXNpYmxlQ29sdW1uSW5kZXg6IGFueSk6IHZvaWQ7XG4gICAgcHJpdmF0ZSBmaW5kRmlyc3REYXRhUm93SW5kZXg7XG4gICAgcHJpdmF0ZSBmaW5kTGFzdERhdGFSb3dJbmRleDtcbiAgICBuYXZpZ2F0ZUJvdHRvbSh2aXNpYmxlQ29sdW1uSW5kZXg6IGFueSk6IHZvaWQ7XG4gICAgbmF2aWdhdGVVcChyb3dFbGVtZW50OiBhbnksIHNlbGVjdGVkTm9kZTogSVNlbGVjdGlvbk5vZGUpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBmb2N1c1ByZXZpb3VzRWxlbWVudChjdXJyZW50Um93RWw6IGFueSwgdmlzaWJsZUNvbHVtbkluZGV4OiBhbnkpOiB2b2lkO1xuICAgIG5hdmlnYXRlRG93bihyb3dFbGVtZW50OiBhbnksIHNlbGVjdGVkTm9kZTogSVNlbGVjdGlvbk5vZGUpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBmb2N1c0VsZW0ocm93RWxlbWVudDogYW55LCB2aXNpYmxlQ29sdW1uSW5kZXg6IGFueSk6IGFueTtcbiAgICBwcm90ZWN0ZWQgZm9jdXNOZXh0RWxlbWVudChyb3dFbGVtZW50OiBhbnksIHZpc2libGVDb2x1bW5JbmRleDogYW55KTogYW55O1xuICAgIGdvVG9GaXJzdENlbGwoKTogdm9pZDtcbiAgICBnb1RvTGFzdENlbGwoKTogdm9pZDtcbiAgICBnb1RvTGFzdEJvZHlFbGVtZW50KCk6IHZvaWQ7XG4gICAgcGVyZm9ybVRhYihjdXJyZW50Um93RWw6IGFueSwgc2VsZWN0ZWROb2RlOiBJU2VsZWN0aW9uTm9kZSk6IHZvaWQ7XG4gICAgbW92ZUZvY3VzVG9GaWx0ZXJDZWxsKHRvU3RhcnQ/OiBib29sZWFuKTogdm9pZDtcbiAgICBuYXZpZ2F0ZVByZXZGaWx0ZXJDZWxsKGNvbHVtbjogSWd4Q29sdW1uQ29tcG9uZW50LCBldmVudEFyZ3M6IGFueSk6IHZvaWQ7XG4gICAgbmF2aWdhdGVGaXJzdENlbGxJZlBvc3NpYmxlKGV2ZW50QXJnczogYW55KTogdm9pZDtcbiAgICBuYXZpZ2F0ZU5leHRGaWx0ZXJDZWxsKGNvbHVtbjogSWd4Q29sdW1uQ29tcG9uZW50LCBldmVudEFyZ3M6IGFueSk6IHZvaWQ7XG4gICAgcHJpdmF0ZSBnZXRMYXN0UGlubmVkRmlsdGVyYWJsZUNvbHVtbjtcbiAgICBwcml2YXRlIGdldEZpcnN0UGlubmVkRmlsdGVyYWJsZUNvbHVtbjtcbiAgICBwZXJmb3JtU2hpZnRUYWJLZXkoY3VycmVudFJvd0VsOiBhbnksIHNlbGVjdGVkTm9kZTogSVNlbGVjdGlvbk5vZGUpOiB2b2lkO1xuICAgIHNob3VsZFBlcmZvcm1WZXJ0aWNhbFNjcm9sbCh0YXJnZXRSb3dJbmRleDogbnVtYmVyLCB2aXNpYmxlQ29sdW1uSW5kZXg6IG51bWJlcik6IGJvb2xlYW47XG4gICAgcGVyZm9ybVZlcnRpY2FsU2Nyb2xsVG9DZWxsKHJvd0luZGV4OiBudW1iZXIsIHZpc2libGVDb2xJbmRleDogbnVtYmVyLCBjYj86ICgpID0+IHZvaWQpOiB2b2lkO1xuICAgIHBlcmZvcm1Ib3Jpem9udGFsU2Nyb2xsVG9DZWxsKHJvd0luZGV4OiBudW1iZXIsIHZpc2libGVDb2x1bW5JbmRleDogbnVtYmVyLCBpc1N1bW1hcnk/OiBib29sZWFuLCBjYj86ICgpID0+IHZvaWQpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBnZXRGb2N1c2FibGVHcmlkKCk6IEdyaWRUeXBlO1xuICAgIHByb3RlY3RlZCBnZXRSb3dCeUluZGV4KGluZGV4OiBhbnksIHNlbGVjdG9yPzogc3RyaW5nKTogdW5rbm93bjtcbiAgICBwcm90ZWN0ZWQgZ2V0TmV4dFJvd0J5SW5kZXgobmV4dEluZGV4OiBhbnkpOiB1bmtub3duO1xuICAgIHByaXZhdGUgZ2V0QWxsUm93cztcbiAgICBwcm90ZWN0ZWQgZ2V0Q2VsbFNlbGVjdG9yKHZpc2libGVJbmRleD86IG51bWJlciwgaXNTdW1tYXJ5PzogYm9vbGVhbik6IHN0cmluZztcbiAgICBwcm90ZWN0ZWQgZ2V0Um93U2VsZWN0b3IoKTogc3RyaW5nO1xuICAgIHByb3RlY3RlZCBnZXRDbG9zZXN0RWxlbUJ5VGFnKHNvdXJjZUVsZW06IGFueSwgdGFyZ2V0VGFnOiBhbnkpOiBhbnk7XG59XG4iXX0=