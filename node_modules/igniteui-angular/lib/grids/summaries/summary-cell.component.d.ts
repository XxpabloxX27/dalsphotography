import { ElementRef } from '@angular/core';
import { IgxSummaryResult } from './grid-summary';
import { IgxColumnComponent } from '../columns/column.component';
import { DataType } from '../../data-operations/data-util';
import { ISelectionNode } from '../selection/selection.service';
import * as ɵngcc0 from '@angular/core';
export declare class IgxSummaryCellComponent {
    private element;
    summaryResults: IgxSummaryResult[];
    column: IgxColumnComponent;
    firstCellIndentation: number;
    hasSummary: boolean;
    density: any;
    constructor(element: ElementRef);
    rowIndex: number;
    get visibleColumnIndex(): number;
    tabindex: number;
    get describeby(): string;
    focused: boolean;
    onFocus(): void;
    onBlur(): void;
    protected get selectionNode(): ISelectionNode;
    dispatchEvent(event: KeyboardEvent): void;
    get width(): string;
    get nativeElement(): any;
    get columnDatatype(): DataType;
    get itemHeight(): number;
    /**
    * @hidden
    */
    get grid(): any;
    private getRowElementByIndex;
    private isKeySupportedInCell;
    translateSummary(summary: IgxSummaryResult): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxSummaryCellComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<IgxSummaryCellComponent, "igx-grid-summary-cell", never, {
    "firstCellIndentation": "firstCellIndentation";
    "hasSummary": "hasSummary";
    "summaryResults": "summaryResults";
    "column": "column";
    "density": "density";
    "rowIndex": "rowIndex";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3VtbWFyeS1jZWxsLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJzdW1tYXJ5LWNlbGwuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztBQUtBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBNEJBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSWd4U3VtbWFyeVJlc3VsdCB9IGZyb20gJy4vZ3JpZC1zdW1tYXJ5JztcbmltcG9ydCB7IElneENvbHVtbkNvbXBvbmVudCB9IGZyb20gJy4uL2NvbHVtbnMvY29sdW1uLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBEYXRhVHlwZSB9IGZyb20gJy4uLy4uL2RhdGEtb3BlcmF0aW9ucy9kYXRhLXV0aWwnO1xuaW1wb3J0IHsgSVNlbGVjdGlvbk5vZGUgfSBmcm9tICcuLi9zZWxlY3Rpb24vc2VsZWN0aW9uLnNlcnZpY2UnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgSWd4U3VtbWFyeUNlbGxDb21wb25lbnQge1xuICAgIHByaXZhdGUgZWxlbWVudDtcbiAgICBzdW1tYXJ5UmVzdWx0czogSWd4U3VtbWFyeVJlc3VsdFtdO1xuICAgIGNvbHVtbjogSWd4Q29sdW1uQ29tcG9uZW50O1xuICAgIGZpcnN0Q2VsbEluZGVudGF0aW9uOiBudW1iZXI7XG4gICAgaGFzU3VtbWFyeTogYm9vbGVhbjtcbiAgICBkZW5zaXR5OiBhbnk7XG4gICAgY29uc3RydWN0b3IoZWxlbWVudDogRWxlbWVudFJlZik7XG4gICAgcm93SW5kZXg6IG51bWJlcjtcbiAgICBnZXQgdmlzaWJsZUNvbHVtbkluZGV4KCk6IG51bWJlcjtcbiAgICB0YWJpbmRleDogbnVtYmVyO1xuICAgIGdldCBkZXNjcmliZWJ5KCk6IHN0cmluZztcbiAgICBmb2N1c2VkOiBib29sZWFuO1xuICAgIG9uRm9jdXMoKTogdm9pZDtcbiAgICBvbkJsdXIoKTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgZ2V0IHNlbGVjdGlvbk5vZGUoKTogSVNlbGVjdGlvbk5vZGU7XG4gICAgZGlzcGF0Y2hFdmVudChldmVudDogS2V5Ym9hcmRFdmVudCk6IHZvaWQ7XG4gICAgZ2V0IHdpZHRoKCk6IHN0cmluZztcbiAgICBnZXQgbmF0aXZlRWxlbWVudCgpOiBhbnk7XG4gICAgZ2V0IGNvbHVtbkRhdGF0eXBlKCk6IERhdGFUeXBlO1xuICAgIGdldCBpdGVtSGVpZ2h0KCk6IG51bWJlcjtcbiAgICAvKipcbiAgICAqIEBoaWRkZW5cbiAgICAqL1xuICAgIGdldCBncmlkKCk6IGFueTtcbiAgICBwcml2YXRlIGdldFJvd0VsZW1lbnRCeUluZGV4O1xuICAgIHByaXZhdGUgaXNLZXlTdXBwb3J0ZWRJbkNlbGw7XG4gICAgdHJhbnNsYXRlU3VtbWFyeShzdW1tYXJ5OiBJZ3hTdW1tYXJ5UmVzdWx0KTogc3RyaW5nO1xufVxuIl19