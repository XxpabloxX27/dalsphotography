import { EventEmitter } from '@angular/core';
/**
 * IgxActionIcon is a container for the action nav icon of the IgxNavbar.
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../directives/button/button.directive';
import * as ɵngcc2 from '../icon/index';
import * as ɵngcc3 from '@angular/common';
export declare class IgxActionIconDirective {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxActionIconDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<IgxActionIconDirective, "igx-action-icon", never, {}, {}, never>;
}
/**
 * **Ignite UI for Angular Navbar** -
 * [Documentation](https://www.infragistics.com/products/ignite-ui-angular/angular/components/navbar.html)
 *
 * The Ignite UI Navbar is most commonly used to provide an app header with a hamburger menu and navigation
 * state such as a "Go Back" button. It also supports other actions represented by icons.
 *
 * Example:
 * ```html
 * <igx-navbar title="Sample App" actionButtonIcon="menu">
 *   <igx-icon>search</igx-icon>
 *   <igx-icon>favorite</igx-icon>
 *   <igx-icon>more_vert</igx-icon>
 * </igx-navbar>
 * ```
 */
export declare class IgxNavbarComponent {
    private static NEXT_ID;
    private isVisible;
    /**
     *An @Input property that sets the value of the `id` attribute. If not provided it will be automatically generated.
     *```html
     *<igx-navbar [id]="'igx-navbar-12'" title="Sample App" actionButtonIcon="menu">
     *```
     */
    id: string;
    /**
     *Returns whether the `IgxNavbarComponent` action button is visible, true/false.
     *```typescript
     *@ViewChild("MyChild")
     *public navBar: IgxNavbarComponent;
     *ngAfterViewInit(){
     *    let actionButtonVisibile = this.navBar.isActionButtonVisible;
     *}
     *```
     */
    get isActionButtonVisible(): boolean;
    /**
     *Sets whether the action button of the `IgxNavbarComponent` is visible.
     *```html
     *<igx-navbar [title]="currentView" [isActionButtonVisible]="'false'"></igx-navbar>
     *```
     */
    set isActionButtonVisible(value: boolean);
    /**
     *An @Input property that sets the icon of the `IgxNavbarComponent`.
     *```html
     *<igx-navbar [title]="currentView" actionButtonIcon="arrow_back"></igx-navbar>
     *```
     */
    actionButtonIcon: string;
    /**
     *An @Input property that sets the title of the `IgxNavbarComponent`.
     *```html
     *<igx-navbar title="Sample App" actionButtonIcon="menu">
     *```
     */
    title: string;
    /**
     *The event that will be thrown when the action is executed,
     *provides reference to the `IgxNavbar` component as argument
     *```typescript
     *public actionExc(event){
     *    alert("Action Execute!");
     *}
     * //..
     *```
     *```html
     *<igx-navbar (onAction)="actionExc($event)" title="Sample App" actionButtonIcon="menu">
     *```
     */
    onAction: EventEmitter<IgxNavbarComponent>;
    /**
     *An @Input property that sets the titleId of the `IgxNavbarComponent`. If not set it will be automatically generated.
     *```html
     *<igx-navbar [titleId]="'igx-navbar-7'" title="Sample App" actionButtonIcon="menu">
     *```
     */
    titleId: string;
    /**
     * @hidden
     */
    protected actionIconTemplate: IgxActionIconDirective;
    /**
     *@hidden
     */
    _triggerAction(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxNavbarComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<IgxNavbarComponent, "igx-navbar", never, {
    "id": "id";
    "titleId": "titleId";
    "isActionButtonVisible": "isActionButtonVisible";
    "actionButtonIcon": "actionButtonIcon";
    "title": "title";
}, {
    "onAction": "onAction";
}, ["actionIconTemplate"]>;
}
/**
 * @hidden
 */
export declare class IgxNavbarModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<IgxNavbarModule, [typeof IgxNavbarComponent, typeof IgxActionIconDirective], [typeof ɵngcc1.IgxButtonModule, typeof ɵngcc2.IgxIconModule, typeof ɵngcc3.CommonModule], [typeof IgxNavbarComponent, typeof IgxActionIconDirective]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<IgxNavbarModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2YmFyLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJuYXZiYXIuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7O0FBSUE7OztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXdGQTs7Ozs7OztBQUtBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG4vKipcbiAqIElneEFjdGlvbkljb24gaXMgYSBjb250YWluZXIgZm9yIHRoZSBhY3Rpb24gbmF2IGljb24gb2YgdGhlIElneE5hdmJhci5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgSWd4QWN0aW9uSWNvbkRpcmVjdGl2ZSB7XG59XG4vKipcbiAqICoqSWduaXRlIFVJIGZvciBBbmd1bGFyIE5hdmJhcioqIC1cbiAqIFtEb2N1bWVudGF0aW9uXShodHRwczovL3d3dy5pbmZyYWdpc3RpY3MuY29tL3Byb2R1Y3RzL2lnbml0ZS11aS1hbmd1bGFyL2FuZ3VsYXIvY29tcG9uZW50cy9uYXZiYXIuaHRtbClcbiAqXG4gKiBUaGUgSWduaXRlIFVJIE5hdmJhciBpcyBtb3N0IGNvbW1vbmx5IHVzZWQgdG8gcHJvdmlkZSBhbiBhcHAgaGVhZGVyIHdpdGggYSBoYW1idXJnZXIgbWVudSBhbmQgbmF2aWdhdGlvblxuICogc3RhdGUgc3VjaCBhcyBhIFwiR28gQmFja1wiIGJ1dHRvbi4gSXQgYWxzbyBzdXBwb3J0cyBvdGhlciBhY3Rpb25zIHJlcHJlc2VudGVkIGJ5IGljb25zLlxuICpcbiAqIEV4YW1wbGU6XG4gKiBgYGBodG1sXG4gKiA8aWd4LW5hdmJhciB0aXRsZT1cIlNhbXBsZSBBcHBcIiBhY3Rpb25CdXR0b25JY29uPVwibWVudVwiPlxuICogICA8aWd4LWljb24+c2VhcmNoPC9pZ3gtaWNvbj5cbiAqICAgPGlneC1pY29uPmZhdm9yaXRlPC9pZ3gtaWNvbj5cbiAqICAgPGlneC1pY29uPm1vcmVfdmVydDwvaWd4LWljb24+XG4gKiA8L2lneC1uYXZiYXI+XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgSWd4TmF2YmFyQ29tcG9uZW50IHtcbiAgICBwcml2YXRlIHN0YXRpYyBORVhUX0lEO1xuICAgIHByaXZhdGUgaXNWaXNpYmxlO1xuICAgIC8qKlxuICAgICAqQW4gQElucHV0IHByb3BlcnR5IHRoYXQgc2V0cyB0aGUgdmFsdWUgb2YgdGhlIGBpZGAgYXR0cmlidXRlLiBJZiBub3QgcHJvdmlkZWQgaXQgd2lsbCBiZSBhdXRvbWF0aWNhbGx5IGdlbmVyYXRlZC5cbiAgICAgKmBgYGh0bWxcbiAgICAgKjxpZ3gtbmF2YmFyIFtpZF09XCInaWd4LW5hdmJhci0xMidcIiB0aXRsZT1cIlNhbXBsZSBBcHBcIiBhY3Rpb25CdXR0b25JY29uPVwibWVudVwiPlxuICAgICAqYGBgXG4gICAgICovXG4gICAgaWQ6IHN0cmluZztcbiAgICAvKipcbiAgICAgKlJldHVybnMgd2hldGhlciB0aGUgYElneE5hdmJhckNvbXBvbmVudGAgYWN0aW9uIGJ1dHRvbiBpcyB2aXNpYmxlLCB0cnVlL2ZhbHNlLlxuICAgICAqYGBgdHlwZXNjcmlwdFxuICAgICAqQFZpZXdDaGlsZChcIk15Q2hpbGRcIilcbiAgICAgKnB1YmxpYyBuYXZCYXI6IElneE5hdmJhckNvbXBvbmVudDtcbiAgICAgKm5nQWZ0ZXJWaWV3SW5pdCgpe1xuICAgICAqICAgIGxldCBhY3Rpb25CdXR0b25WaXNpYmlsZSA9IHRoaXMubmF2QmFyLmlzQWN0aW9uQnV0dG9uVmlzaWJsZTtcbiAgICAgKn1cbiAgICAgKmBgYFxuICAgICAqL1xuICAgIGdldCBpc0FjdGlvbkJ1dHRvblZpc2libGUoKTogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKlNldHMgd2hldGhlciB0aGUgYWN0aW9uIGJ1dHRvbiBvZiB0aGUgYElneE5hdmJhckNvbXBvbmVudGAgaXMgdmlzaWJsZS5cbiAgICAgKmBgYGh0bWxcbiAgICAgKjxpZ3gtbmF2YmFyIFt0aXRsZV09XCJjdXJyZW50Vmlld1wiIFtpc0FjdGlvbkJ1dHRvblZpc2libGVdPVwiJ2ZhbHNlJ1wiPjwvaWd4LW5hdmJhcj5cbiAgICAgKmBgYFxuICAgICAqL1xuICAgIHNldCBpc0FjdGlvbkJ1dHRvblZpc2libGUodmFsdWU6IGJvb2xlYW4pO1xuICAgIC8qKlxuICAgICAqQW4gQElucHV0IHByb3BlcnR5IHRoYXQgc2V0cyB0aGUgaWNvbiBvZiB0aGUgYElneE5hdmJhckNvbXBvbmVudGAuXG4gICAgICpgYGBodG1sXG4gICAgICo8aWd4LW5hdmJhciBbdGl0bGVdPVwiY3VycmVudFZpZXdcIiBhY3Rpb25CdXR0b25JY29uPVwiYXJyb3dfYmFja1wiPjwvaWd4LW5hdmJhcj5cbiAgICAgKmBgYFxuICAgICAqL1xuICAgIGFjdGlvbkJ1dHRvbkljb246IHN0cmluZztcbiAgICAvKipcbiAgICAgKkFuIEBJbnB1dCBwcm9wZXJ0eSB0aGF0IHNldHMgdGhlIHRpdGxlIG9mIHRoZSBgSWd4TmF2YmFyQ29tcG9uZW50YC5cbiAgICAgKmBgYGh0bWxcbiAgICAgKjxpZ3gtbmF2YmFyIHRpdGxlPVwiU2FtcGxlIEFwcFwiIGFjdGlvbkJ1dHRvbkljb249XCJtZW51XCI+XG4gICAgICpgYGBcbiAgICAgKi9cbiAgICB0aXRsZTogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqVGhlIGV2ZW50IHRoYXQgd2lsbCBiZSB0aHJvd24gd2hlbiB0aGUgYWN0aW9uIGlzIGV4ZWN1dGVkLFxuICAgICAqcHJvdmlkZXMgcmVmZXJlbmNlIHRvIHRoZSBgSWd4TmF2YmFyYCBjb21wb25lbnQgYXMgYXJndW1lbnRcbiAgICAgKmBgYHR5cGVzY3JpcHRcbiAgICAgKnB1YmxpYyBhY3Rpb25FeGMoZXZlbnQpe1xuICAgICAqICAgIGFsZXJ0KFwiQWN0aW9uIEV4ZWN1dGUhXCIpO1xuICAgICAqfVxuICAgICAqIC8vLi5cbiAgICAgKmBgYFxuICAgICAqYGBgaHRtbFxuICAgICAqPGlneC1uYXZiYXIgKG9uQWN0aW9uKT1cImFjdGlvbkV4YygkZXZlbnQpXCIgdGl0bGU9XCJTYW1wbGUgQXBwXCIgYWN0aW9uQnV0dG9uSWNvbj1cIm1lbnVcIj5cbiAgICAgKmBgYFxuICAgICAqL1xuICAgIG9uQWN0aW9uOiBFdmVudEVtaXR0ZXI8SWd4TmF2YmFyQ29tcG9uZW50PjtcbiAgICAvKipcbiAgICAgKkFuIEBJbnB1dCBwcm9wZXJ0eSB0aGF0IHNldHMgdGhlIHRpdGxlSWQgb2YgdGhlIGBJZ3hOYXZiYXJDb21wb25lbnRgLiBJZiBub3Qgc2V0IGl0IHdpbGwgYmUgYXV0b21hdGljYWxseSBnZW5lcmF0ZWQuXG4gICAgICpgYGBodG1sXG4gICAgICo8aWd4LW5hdmJhciBbdGl0bGVJZF09XCInaWd4LW5hdmJhci03J1wiIHRpdGxlPVwiU2FtcGxlIEFwcFwiIGFjdGlvbkJ1dHRvbkljb249XCJtZW51XCI+XG4gICAgICpgYGBcbiAgICAgKi9cbiAgICB0aXRsZUlkOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHByb3RlY3RlZCBhY3Rpb25JY29uVGVtcGxhdGU6IElneEFjdGlvbkljb25EaXJlY3RpdmU7XG4gICAgLyoqXG4gICAgICpAaGlkZGVuXG4gICAgICovXG4gICAgX3RyaWdnZXJBY3Rpb24oKTogdm9pZDtcbn1cbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBJZ3hOYXZiYXJNb2R1bGUge1xufVxuIl19