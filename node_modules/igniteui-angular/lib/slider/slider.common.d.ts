/**
 * Template directive that allows you to set a custom template representing the lower label value of the {@link IgxSliderComponent}
 *
 *```html
 * <igx-slider>
 *  <ng-template igxSliderThumbFrom let-value let-labels>{{value}}</ng-template>
 * </igx-slider>
 * ```
 *
 * @context {@link IgxSliderComponent.context}
 */
import * as ɵngcc0 from '@angular/core';
export declare class IgxThumbFromTemplateDirective {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxThumbFromTemplateDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<IgxThumbFromTemplateDirective, "[igxSliderThumbFrom]", never, {}, {}, never>;
}
/**
 * Template directive that allows you to set a custom template representing the upper label value of the {@link IgxSliderComponent}
 *
 * ```html
 * <igx-slider>
 *  <ng-template igxSliderThumbTo let-value let-labels>{{value}}</ng-template>
 * </igx-slider>
 * ```
 *
 * @context {@link IgxSliderComponent.context}
 */
export declare class IgxThumbToTemplateDirective {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxThumbToTemplateDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<IgxThumbToTemplateDirective, "[igxSliderThumbTo]", never, {}, {}, never>;
}
/**
 * Template directive that allows you to set a custom template, represeting primary/secondary tick labels of the {@link IgxSliderComponent}
 *
 * @context {@link IgxTicksComponent.context}
 */
export declare class IgxTickLabelTemplateDirective {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxTickLabelTemplateDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<IgxTickLabelTemplateDirective, "[igxSliderTickLabel]", never, {}, {}, never>;
}
export interface IRangeSliderValue {
    lower: number;
    upper: number;
}
export interface ISliderValueChangeEventArgs {
    oldValue: number | IRangeSliderValue;
    value: number | IRangeSliderValue;
}
export declare enum IgxSliderType {
    /**
     * Slider with single thumb.
     */
    SLIDER = 0,
    /**
     *  Range slider with multiple thumbs, that can mark the range.
     */
    RANGE = 1
}
export declare enum SliderHandle {
    FROM = 0,
    TO = 1
}
/**
 * Slider Tick labels Orientation
 */
export declare enum TickLabelsOrientation {
    Horizontal = 0,
    TopToBottom = 1,
    BottomToTop = 2
}
/**
 * Slider Ticks orientation
 */
export declare enum TicksOrientation {
    Top = 0,
    Bottom = 1,
    Mirror = 2
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xpZGVyLmNvbW1vbi5kLnRzIiwic291cmNlcyI6WyJzbGlkZXIuY29tbW9uLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7OztBQVdBOzs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7O0FBYUE7Ozs7Ozs7OztBQU9BIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUZW1wbGF0ZSBkaXJlY3RpdmUgdGhhdCBhbGxvd3MgeW91IHRvIHNldCBhIGN1c3RvbSB0ZW1wbGF0ZSByZXByZXNlbnRpbmcgdGhlIGxvd2VyIGxhYmVsIHZhbHVlIG9mIHRoZSB7QGxpbmsgSWd4U2xpZGVyQ29tcG9uZW50fVxuICpcbiAqYGBgaHRtbFxuICogPGlneC1zbGlkZXI+XG4gKiAgPG5nLXRlbXBsYXRlIGlneFNsaWRlclRodW1iRnJvbSBsZXQtdmFsdWUgbGV0LWxhYmVscz57e3ZhbHVlfX08L25nLXRlbXBsYXRlPlxuICogPC9pZ3gtc2xpZGVyPlxuICogYGBgXG4gKlxuICogQGNvbnRleHQge0BsaW5rIElneFNsaWRlckNvbXBvbmVudC5jb250ZXh0fVxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBJZ3hUaHVtYkZyb21UZW1wbGF0ZURpcmVjdGl2ZSB7XG59XG4vKipcbiAqIFRlbXBsYXRlIGRpcmVjdGl2ZSB0aGF0IGFsbG93cyB5b3UgdG8gc2V0IGEgY3VzdG9tIHRlbXBsYXRlIHJlcHJlc2VudGluZyB0aGUgdXBwZXIgbGFiZWwgdmFsdWUgb2YgdGhlIHtAbGluayBJZ3hTbGlkZXJDb21wb25lbnR9XG4gKlxuICogYGBgaHRtbFxuICogPGlneC1zbGlkZXI+XG4gKiAgPG5nLXRlbXBsYXRlIGlneFNsaWRlclRodW1iVG8gbGV0LXZhbHVlIGxldC1sYWJlbHM+e3t2YWx1ZX19PC9uZy10ZW1wbGF0ZT5cbiAqIDwvaWd4LXNsaWRlcj5cbiAqIGBgYFxuICpcbiAqIEBjb250ZXh0IHtAbGluayBJZ3hTbGlkZXJDb21wb25lbnQuY29udGV4dH1cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgSWd4VGh1bWJUb1RlbXBsYXRlRGlyZWN0aXZlIHtcbn1cbi8qKlxuICogVGVtcGxhdGUgZGlyZWN0aXZlIHRoYXQgYWxsb3dzIHlvdSB0byBzZXQgYSBjdXN0b20gdGVtcGxhdGUsIHJlcHJlc2V0aW5nIHByaW1hcnkvc2Vjb25kYXJ5IHRpY2sgbGFiZWxzIG9mIHRoZSB7QGxpbmsgSWd4U2xpZGVyQ29tcG9uZW50fVxuICpcbiAqIEBjb250ZXh0IHtAbGluayBJZ3hUaWNrc0NvbXBvbmVudC5jb250ZXh0fVxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBJZ3hUaWNrTGFiZWxUZW1wbGF0ZURpcmVjdGl2ZSB7XG59XG5leHBvcnQgaW50ZXJmYWNlIElSYW5nZVNsaWRlclZhbHVlIHtcbiAgICBsb3dlcjogbnVtYmVyO1xuICAgIHVwcGVyOiBudW1iZXI7XG59XG5leHBvcnQgaW50ZXJmYWNlIElTbGlkZXJWYWx1ZUNoYW5nZUV2ZW50QXJncyB7XG4gICAgb2xkVmFsdWU6IG51bWJlciB8IElSYW5nZVNsaWRlclZhbHVlO1xuICAgIHZhbHVlOiBudW1iZXIgfCBJUmFuZ2VTbGlkZXJWYWx1ZTtcbn1cbmV4cG9ydCBkZWNsYXJlIGVudW0gSWd4U2xpZGVyVHlwZSB7XG4gICAgLyoqXG4gICAgICogU2xpZGVyIHdpdGggc2luZ2xlIHRodW1iLlxuICAgICAqL1xuICAgIFNMSURFUiA9IDAsXG4gICAgLyoqXG4gICAgICogIFJhbmdlIHNsaWRlciB3aXRoIG11bHRpcGxlIHRodW1icywgdGhhdCBjYW4gbWFyayB0aGUgcmFuZ2UuXG4gICAgICovXG4gICAgUkFOR0UgPSAxXG59XG5leHBvcnQgZGVjbGFyZSBlbnVtIFNsaWRlckhhbmRsZSB7XG4gICAgRlJPTSA9IDAsXG4gICAgVE8gPSAxXG59XG4vKipcbiAqIFNsaWRlciBUaWNrIGxhYmVscyBPcmllbnRhdGlvblxuICovXG5leHBvcnQgZGVjbGFyZSBlbnVtIFRpY2tMYWJlbHNPcmllbnRhdGlvbiB7XG4gICAgSG9yaXpvbnRhbCA9IDAsXG4gICAgVG9wVG9Cb3R0b20gPSAxLFxuICAgIEJvdHRvbVRvVG9wID0gMlxufVxuLyoqXG4gKiBTbGlkZXIgVGlja3Mgb3JpZW50YXRpb25cbiAqL1xuZXhwb3J0IGRlY2xhcmUgZW51bSBUaWNrc09yaWVudGF0aW9uIHtcbiAgICBUb3AgPSAwLFxuICAgIEJvdHRvbSA9IDEsXG4gICAgTWlycm9yID0gMlxufVxuIl19